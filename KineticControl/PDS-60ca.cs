using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Media;

namespace KineticControl
{
    public class PDS60ca
    {
        //Squence needed to get the attention of the PDS-60ca
        private static String _findOne = "0401dc4a0100090100000000a0310567";
        private static String _findTwo = "0401dc4a0100010000000000a9fe8889";
        private static String _findThree = "0401dc4a01000100000000000a0101de";
        private static String _findFour = "0401dc4a01000a00a9fe319af8acfe03";
        private const String _initalHex =  "0401dc4a01000801000000000000000002ef00000002f0ff";
        private const String _intialHex2 = "0401dc4a010008010000000000000000011b00000002f0ff";
        private static Color[] _colors = new Color[50];
     

        public String addressOff
       
        //Port 2
        public const string byteStringOne = "0401dc4a01000801000000000000000001ef00000002f0ff0000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" + 
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000";

        public const string byteStringTwo = "0401dc4a01000801000000000000000002ef00000002f0ff" + "44499900000000FF000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
                                    "000000000000000000000000000000000000000000000000000";

        public const string byteStringThree = "0401dc4a010008010000000000000000021b00000002f0ff00000000000000000000000000000000000000000000"+
                                    "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                                    "000000000000000000000000000000000000000000000000000000";


        private List<String> addresses = new List<string>();

        public PDS60ca(Color color)
        {
            for (int i = 0; i < _colors.Length; i++)
            {
                _colors[i] = color;
          
            }
        }

        public PDS60ca()
        {
            
        }

        public void setColor(Color color, int index, Network network, int num)
        {
            _colors[index] = color;
            if(num == 1)
            network.SendUpdate(_colors, 1);
            else
            network.SendUpdate(_colors, 2); 
        }

        public void turnOnNode(String address)
        {
            
        }
        public static String DataOne
        {
            get { return _findOne; }
            set { _findOne = value;}
        }

        public static String DataTwo
        {
            get { return _findTwo; }
            set { _findTwo = value; }
        }

        public static String DataThree
        {
            get { return _findThree; }
            set { _findThree = value; }
        }

        public static String DataFour
        {
            get { return _findFour; }
            set { _findFour = value; }
        }

        public Color[] ColorAddress
        {
            get { return _colors; }
            set { _colors = value; }
        }

        public String IntialHex
        {
            get { return _initalHex; }
        }

        public String IntialHex2
        {
            get { return _intialHex2; }
        }

        public String AddressOff
        {
            get { return addressOff; }
        }

    }
}
